[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode blend_add,depth_draw_opaque,cull_back,unshaded;
varying float opac;
uniform sampler2D gradient;
uniform sampler2D noise;
uniform float scale;
void vertex() {
	opac  = length(MODELVIEW_MATRIX[0]);
	MODELVIEW_MATRIX = INV_CAMERA_MATRIX * mat4(scale * CAMERA_MATRIX[0], scale * CAMERA_MATRIX[1], scale * CAMERA_MATRIX[2],WORLD_MATRIX[3]);
}

void fragment(){
	float grad = pow((1.0-1.5*length(UV-vec2(0.5))),3);
	ALPHA = clamp(opac * grad*pow(2.0 * texture(noise,UV).x,5.0),0.0,1.0);
	ALBEDO = clamp(texture(gradient,opac * vec2(grad * (0.1 + 0.9 * pow(texture(noise,UV).x,10-scale)))).rgb,vec3(0.0),vec3(1.0));
}"

[resource]
shader = SubResource( 1 )
